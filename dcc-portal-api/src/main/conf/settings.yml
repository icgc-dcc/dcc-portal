# HTTP
http:
  port: 5381
  adminPort: 5382
  rootPath: "/api/*"

  # HTTP request log settings.
  requestLog:

    # Settings for logging to stdout.
    console:

      # If true, log requests to stdout.
      enabled: false

    # Settings for logging to a file.
    file:

      # If true, log requests to a file.
      enabled: false

# Database
database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: 

  # the password
  password: 
  
  # the JDBC URL
  url: jdbc:postgresql://
  
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* Portal DB Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # how long a connection must be held before it can be validated
  checkConnectionHealthWhenIdleFor: 10s

  # the maximum lifetime of an idle connection
  closeConnectionIfIdleFor: 1 minute

# Controls generation of "Last-Modified" and "ETag" HTTP headers
cache:
  enabled: true

  # Enable Last-Modified HTTP header generation
  enableLastModified: true

  # List of resources for which Last-Modified HTTP header should not be generated. Format: regex accepted by java.lang.String
  excludeLastModified: ["^v\\d+/short$", "^v\\d+/auth/.*$", "^v\\d+/download.*$", "^v\\d+/analysis.*$", "^v\\d+/entityset.*$", "^v\\d+/settings.*$", "^v\\d+/repository/files.*$" ]

  # Enable ETag HTTP header generation
  enableETag: false

  # List of resources for which ETag HTTP header should not be generated. Format: regex accepted by java.lang.String
  excludeETag: []

# Authentication
crowd:
  ssoUrl: ""
  
oauth:
  serviceUrl: "https://localhost:8443"
  clientId: "mgmt"
  clientSecret: "pass"
  enableHttpLogging: true
  enableStrictSSL: false

hazelcast:
  # NB: Below hazelcast settings do not have default values. The portal won't start if they're unset
  enabled: false

  # Credentials to enter a group. E.g. dev, uat, prod groups
  groupName: ""
  groupPassword: ""

  # Time-to-live settings.
  # Maximum number of seconds for each entry to stay in the cache. Entries that are
  # older than the set value and not updated for that time
  # will get automatically evicted from the cache.

  # Expire inactive users in 15 minutes
  usersCacheTTL: 900

  # Expire openId authentication attempt in 2 minutes
  openidAuthTTL: 120
  
  # Enable multicast? If false then hosts must be provided. hosts not used otherwise
  # Multicast must be disabled in an OpenStack / AWS environment
  multicast: false
  hosts:
    - localhost

# ElasticSearch index and hosts
elastic:
  indexName: "dcc-release-dcc-etl-cli"
  repoIndexName: "icgc-repository"
  nodeAddresses:
     - host: "localhost"
       port: 9300

  # List of TransportClient settings. 
  # E.g. 
  # "client.transport.sniff": true 
  client:
    "client.transport.sniff": true

# Mail
mail:
  enabled: false
  recipientEmail:

# Data download
download:
  enabled: true
  serverUrl: "http://localhost:9090"
  publicServerUrl: "http://localhost:9090"
  sharedSecret: ""
  aesKey: ""


web:
  # Defines an external URL when the portal is behind a reverse proxy / load balancer. E.g. shortUrl resource uses it for generation of valid URLs
  baseUrl: ""

# ICGC Client configuration
icgc:

  # CGP/DACO API endpoint
  cgpUrl: ""
  # ShortUrl API endpoint
  shortUrl: ""

  # CUD API endpoint
  cudUrl: ""
  
  # CMS API endpoint
  cmsUrl: ""

  # CUD credentials. Obtained from webdev@oicr.on.ca
  cudAppId: ""
  cudUser: ""
  cudPassword: ""

  # OAuth credentials
  # To generate the credentials go to icgc.org, log in, go to the "OAuth Settings" tab and request "Regenerate all tokens"
  consumerKey: ""
  consumerSecret: ""
  accessToken: ""
  accessSecret: ""

  # Log HTTP requests to the API
  enableHttpLogging: false

  # Disallow self-signed SSL certificates
  enableStrictSSL: true

# Set analysis configuration
setOperation:

  # Limit for number of items to return from ElasticSearch
  maxPreviewNumberOfHits: 1000
  maxNumberOfHits: 20000
  maxMultiplier: 3

# Release metadata configuration
release:
  releaseDate: "placeholder"
  dataVersion: 2

# Logging settings
logging:

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: false

    # Do not write log statements below this threshold to the file.
    threshold: INFO

    # The file to which current statements will be logged.
    currentLogFilename: ../logs/dcc-portal-api.log

    # When the log file rotates, the archived log will be renamed to this and gzipped. The
    # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
    # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
    archivedLogFilenamePattern: ../logs/dcc-portal-api-%d.log.gz

    # The number of archived files to keep.
    archivedFileCount: 10

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL
  level: INFO

  # Logger-specific levels
  loggers:

    # Jersey request logging
    "com.sun.jersey.api.container.filter.LoggingFilter": INFO

    # ElasticSearch query logging
    "org.icgc.dcc.portal.service.BaseQueryService": WARN

    # Very chatty
    "com.wordnik.swagger.jsonschema.ApiModelParser": WARN

    # dynamic downloader logging
    "org.apache.hadoop.hbase": WARN
    "org.apache.zookeeper": WARN

    # ERRORs should be converted to WARNs in Swagger 1.2.2
    "com.wordnik.swagger.jaxrs.HelpApi": OFF
